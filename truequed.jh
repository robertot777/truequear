
/**
* Entidad de comuna de usuario
*/
entity Comuna {
	nombreComuna String required
}

/**
* Entidad de region de usuario
*/
entity Region {
	nombreRegion String required
}

relationship ManyToOne {
	Comuna{region} to Region 
}

/**
* Entidad de direccion de usuario
*/
entity Direccion {
	direccion String required,
	numero String required,
	adicional String,
	codigoPostal String
}

relationship OneToOne {
	Direccion{comuna} to Comuna

}


relationship ManyToOne {
	Direccion {Tipo} to User
  
    
    
}

relationship OneToOne {
	 Objetos {nombre} to User,
   Oferta {nombre} to  User 

  
    
    
}

relationship ManyToOne {

     Valoracion{nombre} to Cliente
     
}



entity Cliente {
	nombre String required,
    apellido String required,
	descripcion String required
}

entity Valoracion {
  tipoValoracion TipoValoracion 
}
enum TipoValoracion {
 EXELENTE, BUENA, REGULAR, POCOSERIO, PESIMO
}



entity Objetos { 
     
	tipoObjeto String required,
    agregarArchibo ImageBlob required,
     tipoObjetos TipoObjetos ,
	descripcion String required
  
	
}



entity Oferta  {
  
   generarOferta String required,
    tipoObjeto TipoObjeto,
    generaOferta ImageBlob required
    
}
entity RespuestaOferta  {
   aceptar Boolean required
    
}

enum TipoObjeto {

  ALIMENTACIONBEBIDAS, ARTEANTIGUEDADES, VEHICULOS, CASAHOGAR, COLECCION, DEPORTES, EDUCACION, IMAGENSONIDO, INFORMATICAELECTRONICA, INMOBILIARIA, JOYERIA, JUEGOSJUGUETES, LIBROSREVISTASCOMICS, MUSICA, ROPACALZADO, SALUDBELLEZA, SERVICIOS, MANOOBRA, TELEFONIA, TIEMPOLIBRE
  

  
}
enum TipoObjetos {

  ALIMENTACIONBEBIDA, ARTEANTIGUEDADE, VEHICULO, CASAHOGA, COLECCIONES, DEPORTE, EDUCAR, IMAGENESSONIDO, INFORMATICAEELECTRONICA, INMOBILIARIAS, JOYERIAS, JUEGOSJUGUETE, LIBROSREVISTASCOMIC, MUSICAX, ROPAYCALZADO, SALUDYBELLEZA, SERVICIOS, MANODEOBRA, TELEFONIAS, TIEMPOLIBRES
  

  
}

relationship OneToOne {
  

     Cliente  {perfil} to User
}

  relationship OneToOne {
     
RespuestaOferta {GeneraRespuestas}   to  Oferta



 }

 


dto * with mapstruct

// Set service options to all except few
//service all with serviceImpl except Employee, Job
service all with serviceImpl
// Set an angular suffix
//angularSuffix * with mySuffix






   
   
